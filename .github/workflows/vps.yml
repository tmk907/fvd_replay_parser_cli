name: Build and deploy to VPS

on:
  workflow_dispatch:
  push:
    branches: [ main ]

env:
  REPOS_PATH: /home/runner/work/fvd_replay_parser_cli/fvd_replay_parser_cli

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-musl
            bin_name: fvd_replay_parser_cli
          - target: x86_64-pc-windows-gnu
            bin_name: fvd_replay_parser_cli.exe
    steps:
      - uses: actions/checkout@v4
        with:
          path: 'fvd_replay_parser_cli'

      - uses: actions/checkout@v4
        with:
          repository: 'tmk907/aoe2rec'
          path: 'aoe2rec'
          ref: fvd-parser

      - name: Add musl target
        run: rustup target add ${{ matrix.target }}

      - name: Install linker for Windows (if needed)
        if: matrix.target == 'x86_64-pc-windows-gnu'
        run: sudo apt-get update && sudo apt-get install -y mingw-w64

      - name: Build release binary
        run: cargo build --release --target ${{ matrix.target }}
        working-directory: ./fvd_replay_parser_cli

      - name: Show source tree
        run: tree -L 4
        working-directory: ./fvd_replay_parser_cli
    
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: fvd_replay_parser_cli
          path: ./fvd_replay_parser_cli/target/${{ matrix.target }}/release/${{ matrix.bin_name }}
          
  transfer-vps:
    runs-on: ubuntu-latest
    needs: build-linux
    steps:
      - name: Download binary
        uses: actions/download-artifact@v4
        with:
          name: fvd_replay_parser_cli
          path: ./downloaded

      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          chmod 700 ~/.ssh
          echo "$SSH_KEY" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          cat >>~/.ssh/config <<END
          Host vps
              HostName $SSH_HOST
              User $SSH_USER
              IdentityFile ~/.ssh/id_ed25519
              StrictHostKeyChecking no
              IdentitiesOnly yes
              PasswordAuthentication no
          END
        env:
          SSH_USER: ${{ secrets.SERVER_USERNAME }}
          SSH_KEY: ${{ secrets.SERVER_KEY }}
          SSH_HOST: ${{ secrets.SERVER_HOST }}

      # Transfer file
      - name: Transfer file
        run: |
          ssh vps "mkdir -p /srv/www/fvd"
          scp "./downloaded/fvd_replay_parser_cli" vps:"/srv/www/fvd"

      # Remove shh files
      - name: Remove ssh files
        run: |
          rm ~/.ssh/id_ed25519
          rm ~/.ssh/config